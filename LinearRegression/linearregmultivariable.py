# -*- coding: utf-8 -*-
"""LinearRegMultivariable.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_Yupxdj5P1GR2xL0EeOOkSr0S-1YB4P5
"""

import pandas as pd
import numpy as np

df=pd.read_csv("CarPrice_Assignment.csv")
print(df)

car_Id=list(df["car_ID"]/df["car_ID"].max())
car_Id=car_Id[0:-55:1]
print(car_Id)
print(len(car_Id))
car_Id_test=car_Id[-55:-1:1]
print(car_Id_test)
print(len(car_Id_test))
wheelbase=list(df["wheelbase"]/df["wheelbase"].max())
wheelbase=wheelbase[0:-55:1]
print(wheelbase)
print(len(wheelbase))
wheelbase_test=wheelbase[-55:-1:1]
print(wheelbase_test)
print(len(wheelbase_test))
carwidth=list(df["carwidth"]/df["carwidth"].max())
carwidth=carwidth[0:-55:1]
print(carwidth)
print(len(carwidth))
carwidth_test=carwidth[-55:-1:1]
print(carwidth_test)
print(len(carwidth_test))
carheight=list(df["carheight"]/df["carheight"].max())
carheight=carheight[0:-55:1]
print(carheight)
print(len(carheight))
carheight_test=carheight[-55:-1:1]
print(carheight_test)
print(len(carheight_test))
price=list(df["price"]/df["price"].max())
price=price[0:-55:1]
print(price)
print(len(price))
price_test=price[-55:-1:1]
print(price_test)
print(len(price_test))

x1=np.array(car_Id)
x2=np.array(wheelbase)
x3=np.array(carwidth)
x4=np.array(carheight)
x1_test=np.array(car_Id_test)
x2_test=np.array(wheelbase_test)
x3_test=np.array(carwidth_test)
x4_test=np.array(carheight_test)
y=np.array(price)
y_test=np.array(price_test)

"""Hypothesis:"""

def Hypothesis(th0,th1,th2,th3,th4,x1,x2,x3,x4):
  return th0+th1*x1+th2*x2+th3*x3+th4*x4

"""get the thetas"""

from pandas.core.common import temp_setattr
theta0=0
theta1=0
theta2=0
theta3=0
theta4=0
epoches=1000
learnRate=0.001
n=len(x1)

for i in range(epoches):
    temp0=theta0-learnRate*1/n*sum(Hypothesis(theta0,theta1,theta2,theta3,theta4,x1,x2,x3,x4)-y)
    temp1=theta1-learnRate*1/n*sum((Hypothesis(theta0,theta1,theta2,theta3,theta4,x1,x2,x3,x4)-y)*x1)
    temp2=theta2-learnRate*1/n*sum((Hypothesis(theta0,theta1,theta2,theta3,theta4,x1,x2,x3,x4)-y)*x2)
    temp3=theta3-learnRate*1/n*sum((Hypothesis(theta0,theta1,theta2,theta3,theta4,x1,x2,x3,x4)-y)*x3)
    temp4=theta4-learnRate*1/n*sum((Hypothesis(theta0,theta1,theta2,theta3,theta4,x1,x2,x3,x4)-y)*x4)
    theta0=temp0
    theta1=temp1
    theta2=temp2
    theta3=temp3
    theta3=temp4

print(theta0,theta1,theta2,theta3,theta4)
print("Accuracy is:",100-sum((y_test-Hypothesis(theta0,theta1,theta2,theta3,theta4,x1_test,x2_test,x3_test,x4_test))*100)/len(y_test),"%")